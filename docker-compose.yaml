name: schocken

networks:
  schocken:
    name: schocken

volumes:
  schocken-pgdata:
    name: schocken-pgdata
  schocken-mongodata:
    name: schocken-mongodata

services:
  postgres:
    image: postgres:15.7
    container_name: schocken-postgres
    restart: unless-stopped
    networks:
      - schocken
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      HOPTIMISTEN_DATABASE_NAME: ${DATABASE_DB}
    ports:
      - "5439:5432"
    volumes:
      - ./db/init.sh:/docker-entrypoint-initdb.d/init.sh
      - schocken-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    networks:
      - schocken
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27018:27017"
    volumes:
      - schocken-mongodata:/data/db

  # see https://hub.docker.com/r/prodrigestivill/postgres-backup-local
  pgbackups:
    image: prodrigestivill/postgres-backup-local:15
    restart: always
    volumes:
      - ./db/backups:/backups
    depends_on:
      - postgres
    networks:
      - schocken
    environment:
      POSTGRES_HOST: schocken-postgres
      POSTGRES_DB: ${DATABASE_DB}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      BACKUP_SUFFIX: .tar
      POSTGRES_EXTRA_OPTS: -F t -a
      SCHEDULE: "0 4 * * SAT" # At 04:00 on Saturday
#      SCHEDULE: "* * * * *" # At every minute (for testing)
      BACKUP_ON_START: "TRUE"

  schocken-backend:
    image: philippeschild/hoptimisten-backend:${BACKEND_VERSION}
    restart: unless-stopped
    container_name: schocken-backend
    networks:
      - schocken
    env_file:
      - .env
    volumes:
      - ./logs:/logs/
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_started

  schocken-frontend:
    image: philippeschild/hoptimisten-frontend:${FRONTEND_VERSION}
    restart: unless-stopped
    container_name: schocken-frontend
    networks:
      - schocken

  cloudflare-tunnel:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare-tunnel
    restart: unless-stopped
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${TUNNEL_TOKEN}
    networks:
      - schocken

  proxy:
    image: nginx:latest
    container_name: schocken-proxy
    restart: unless-stopped
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/:ro
    networks:
      - schocken

  ftp-server:
    environment:
      - PUBLIC_IP=${HOST_IP}
      - FTP_PASS=123
      - FTP_USER=user
    image: garethflowers/ftp-server
    ports:
      - "20-21:20-21/tcp"
      - "40000-40009:40000-40009/tcp" # For passive mode
    volumes:
      - "~/schocken-ops:/home/user"
    profiles:
      - donotstart # service is disabled by default

  db-restore-dump:
    image: postgres:15.7
    command: pg_restore -h schocken-postgres -p 5432 -d hoptimisten ./hoptimisten.tar
    volumes:
      - ./db/dumps/hoptimisten-20250621.tar:/hoptimisten.tar
    networks:
      - schocken
    environment:
      PGPASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - donotstart # service is disabled by default
